   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"uart.c"
  21              	.Ltext0:
  22              		.file 1 "../src/uart.c"
 1682              		.align	2
 1683              		.global	uart0_init
 1685              	uart0_init:
 1686              	.LFB0:
   1:../src/uart.c **** #include <s3c44b0x.h>
   2:../src/uart.c **** #include <uart.h>
   3:../src/uart.c **** 
   4:../src/uart.c **** void uart0_init( void )
   5:../src/uart.c **** {
 1687              		.loc 1 5 0
 1688              		.cfi_startproc
 1689              		@ Function supports interworking.
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 1, uses_anonymous_args = 0
 1692 0000 0DC0A0E1 		mov	ip, sp
 1693              	.LCFI0:
 1694              		.cfi_def_cfa_register 12
 1695 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1696 0008 04B04CE2 		sub	fp, ip, #4
 1697              		.cfi_offset 14, -8
 1698              		.cfi_offset 13, -12
 1699              		.cfi_offset 11, -16
 1700              	.LCFI1:
 1701              		.cfi_def_cfa 11, 4
   6:../src/uart.c ****     UFCON0 = 0x1;
 1702              		.loc 1 6 0
 1703 000c 40309FE5 		ldr	r3, .L2
 1704 0010 0120A0E3 		mov	r2, #1
 1705 0014 002083E5 		str	r2, [r3, #0]
   7:../src/uart.c ****     UMCON0 = 0x0;
 1706              		.loc 1 7 0
 1707 0018 38309FE5 		ldr	r3, .L2+4
 1708 001c 0020A0E3 		mov	r2, #0
 1709 0020 002083E5 		str	r2, [r3, #0]
   8:../src/uart.c ****     ULCON0 = 0x3;
 1710              		.loc 1 8 0
 1711 0024 1D36A0E3 		mov	r3, #30408704
 1712 0028 0320A0E3 		mov	r2, #3
 1713 002c 002083E5 		str	r2, [r3, #0]
   9:../src/uart.c ****     UBRDIV0 = 34;
 1714              		.loc 1 9 0
 1715 0030 24309FE5 		ldr	r3, .L2+8
 1716 0034 2220A0E3 		mov	r2, #34
 1717 0038 002083E5 		str	r2, [r3, #0]
  10:../src/uart.c ****     UCON0 = 0x5;
 1718              		.loc 1 10 0
 1719 003c 1C309FE5 		ldr	r3, .L2+12
 1720 0040 0520A0E3 		mov	r2, #5
 1721 0044 002083E5 		str	r2, [r3, #0]
  11:../src/uart.c **** }
 1722              		.loc 1 11 0
 1723 0048 0CD04BE2 		sub	sp, fp, #12
 1724 004c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1725 0050 1EFF2FE1 		bx	lr
 1726              	.L3:
 1727              		.align	2
 1728              	.L2:
 1729 0054 0800D001 		.word	30408712
 1730 0058 0C00D001 		.word	30408716
 1731 005c 2800D001 		.word	30408744
 1732 0060 0400D001 		.word	30408708
 1733              		.cfi_endproc
 1734              	.LFE0:
 1736              		.align	2
 1737              		.global	uart0_putchar
 1739              	uart0_putchar:
 1740              	.LFB1:
  12:../src/uart.c **** 
  13:../src/uart.c **** void uart0_putchar( char ch )
  14:../src/uart.c **** {
 1741              		.loc 1 14 0
 1742              		.cfi_startproc
 1743              		@ Function supports interworking.
 1744              		@ args = 0, pretend = 0, frame = 8
 1745              		@ frame_needed = 1, uses_anonymous_args = 0
 1746 0064 0DC0A0E1 		mov	ip, sp
 1747              	.LCFI2:
 1748              		.cfi_def_cfa_register 12
 1749 0068 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1750 006c 04B04CE2 		sub	fp, ip, #4
 1751              		.cfi_offset 14, -8
 1752              		.cfi_offset 13, -12
 1753              		.cfi_offset 11, -16
 1754              	.LCFI3:
 1755              		.cfi_def_cfa 11, 4
 1756 0070 08D04DE2 		sub	sp, sp, #8
 1757 0074 0030A0E1 		mov	r3, r0
 1758 0078 0D304BE5 		strb	r3, [fp, #-13]
  15:../src/uart.c ****     while( (UFSTAT0 & (1<<9)));
 1759              		.loc 1 15 0
 1760 007c 0000A0E1 		mov	r0, r0	@ nop
 1761              	.L5:
 1762              		.loc 1 15 0 is_stmt 0 discriminator 1
 1763 0080 24309FE5 		ldr	r3, .L6
 1764 0084 003093E5 		ldr	r3, [r3, #0]
 1765 0088 023C03E2 		and	r3, r3, #512
 1766 008c 000053E3 		cmp	r3, #0
 1767 0090 FAFFFF1A 		bne	.L5
  16:../src/uart.c ****     UTXH0 = ch;
 1768              		.loc 1 16 0 is_stmt 1
 1769 0094 14309FE5 		ldr	r3, .L6+4
 1770 0098 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1771 009c 002083E5 		str	r2, [r3, #0]
  17:../src/uart.c **** }
 1772              		.loc 1 17 0
 1773 00a0 0CD04BE2 		sub	sp, fp, #12
 1774 00a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1775 00a8 1EFF2FE1 		bx	lr
 1776              	.L7:
 1777              		.align	2
 1778              	.L6:
 1779 00ac 1800D001 		.word	30408728
 1780 00b0 2000D001 		.word	30408736
 1781              		.cfi_endproc
 1782              	.LFE1:
 1784              		.align	2
 1785              		.global	uart0_getchar
 1787              	uart0_getchar:
 1788              	.LFB2:
  18:../src/uart.c **** 
  19:../src/uart.c **** char uart0_getchar( void )
  20:../src/uart.c **** {
 1789              		.loc 1 20 0
 1790              		.cfi_startproc
 1791              		@ Function supports interworking.
 1792              		@ args = 0, pretend = 0, frame = 0
 1793              		@ frame_needed = 1, uses_anonymous_args = 0
 1794 00b4 0DC0A0E1 		mov	ip, sp
 1795              	.LCFI4:
 1796              		.cfi_def_cfa_register 12
 1797 00b8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1798 00bc 04B04CE2 		sub	fp, ip, #4
 1799              		.cfi_offset 14, -8
 1800              		.cfi_offset 13, -12
 1801              		.cfi_offset 11, -16
 1802              	.LCFI5:
 1803              		.cfi_def_cfa 11, 4
  21:../src/uart.c ****     while( ((UFSTAT0 & 0xF) )==0) ; // QUE PONEMOS AQUI????? ¿CÓMO SABEMOS QUE VALE 0?
 1804              		.loc 1 21 0
 1805 00c0 0000A0E1 		mov	r0, r0	@ nop
 1806              	.L9:
 1807              		.loc 1 21 0 is_stmt 0 discriminator 1
 1808 00c4 28309FE5 		ldr	r3, .L10
 1809 00c8 003093E5 		ldr	r3, [r3, #0]
 1810 00cc 0F3003E2 		and	r3, r3, #15
 1811 00d0 000053E3 		cmp	r3, #0
 1812 00d4 FAFFFF0A 		beq	.L9
  22:../src/uart.c ****     return URXH0;
 1813              		.loc 1 22 0 is_stmt 1
 1814 00d8 18309FE5 		ldr	r3, .L10+4
 1815 00dc 003093E5 		ldr	r3, [r3, #0]
 1816 00e0 FF3003E2 		and	r3, r3, #255
  23:../src/uart.c **** }
 1817              		.loc 1 23 0
 1818 00e4 0300A0E1 		mov	r0, r3
 1819 00e8 0CD04BE2 		sub	sp, fp, #12
 1820 00ec 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1821 00f0 1EFF2FE1 		bx	lr
 1822              	.L11:
 1823              		.align	2
 1824              	.L10:
 1825 00f4 1800D001 		.word	30408728
 1826 00f8 2400D001 		.word	30408740
 1827              		.cfi_endproc
 1828              	.LFE2:
 1830              		.align	2
 1831              		.global	uart0_puts
 1833              	uart0_puts:
 1834              	.LFB3:
  24:../src/uart.c **** 
  25:../src/uart.c **** void uart0_puts( char *s )
  26:../src/uart.c **** {
 1835              		.loc 1 26 0
 1836              		.cfi_startproc
 1837              		@ Function supports interworking.
 1838              		@ args = 0, pretend = 0, frame = 8
 1839              		@ frame_needed = 1, uses_anonymous_args = 0
 1840 00fc 0DC0A0E1 		mov	ip, sp
 1841              	.LCFI6:
 1842              		.cfi_def_cfa_register 12
 1843 0100 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1844 0104 04B04CE2 		sub	fp, ip, #4
 1845              		.cfi_offset 14, -8
 1846              		.cfi_offset 13, -12
 1847              		.cfi_offset 11, -16
 1848              	.LCFI7:
 1849              		.cfi_def_cfa 11, 4
 1850 0108 08D04DE2 		sub	sp, sp, #8
 1851 010c 10000BE5 		str	r0, [fp, #-16]
  27:../src/uart.c ****     while(*s != '\0'){
 1852              		.loc 1 27 0
 1853 0110 060000EA 		b	.L13
 1854              	.L14:
  28:../src/uart.c ****     	uart0_putchar(*s++);
 1855              		.loc 1 28 0
 1856 0114 10301BE5 		ldr	r3, [fp, #-16]
 1857 0118 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1858 011c 10201BE5 		ldr	r2, [fp, #-16]
 1859 0120 012082E2 		add	r2, r2, #1
 1860 0124 10200BE5 		str	r2, [fp, #-16]
 1861 0128 0300A0E1 		mov	r0, r3
 1862 012c FEFFFFEB 		bl	uart0_putchar
 1863              	.L13:
  27:../src/uart.c ****     while(*s != '\0'){
 1864              		.loc 1 27 0 discriminator 1
 1865 0130 10301BE5 		ldr	r3, [fp, #-16]
 1866 0134 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1867 0138 000053E3 		cmp	r3, #0
 1868 013c F4FFFF1A 		bne	.L14
  29:../src/uart.c **** 
  30:../src/uart.c ****     }
  31:../src/uart.c **** }
 1869              		.loc 1 31 0
 1870 0140 0CD04BE2 		sub	sp, fp, #12
 1871 0144 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1872 0148 1EFF2FE1 		bx	lr
 1873              		.cfi_endproc
 1874              	.LFE3:
 1876              		.align	2
 1877              		.global	uart0_putint
 1879              	uart0_putint:
 1880              	.LFB4:
  32:../src/uart.c **** 
  33:../src/uart.c **** void uart0_putint( int32 i )
  34:../src/uart.c **** {
 1881              		.loc 1 34 0
 1882              		.cfi_startproc
 1883              		@ Function supports interworking.
 1884              		@ args = 0, pretend = 0, frame = 32
 1885              		@ frame_needed = 1, uses_anonymous_args = 0
 1886 014c 0DC0A0E1 		mov	ip, sp
 1887              	.LCFI8:
 1888              		.cfi_def_cfa_register 12
 1889 0150 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1890 0154 04B04CE2 		sub	fp, ip, #4
 1891              		.cfi_offset 14, -8
 1892              		.cfi_offset 13, -12
 1893              		.cfi_offset 11, -16
 1894              	.LCFI9:
 1895              		.cfi_def_cfa 11, 4
 1896 0158 20D04DE2 		sub	sp, sp, #32
 1897 015c 28000BE5 		str	r0, [fp, #-40]
  35:../src/uart.c **** 	 char buf[11 +1];  // ESTO ESTA BIEN?
  36:../src/uart.c **** 	 char *p = buf + 12;
 1898              		.loc 1 36 0
 1899 0160 20304BE2 		sub	r3, fp, #32
 1900 0164 0C3083E2 		add	r3, r3, #12
 1901 0168 10300BE5 		str	r3, [fp, #-16]
  37:../src/uart.c **** 	 boolean negativo=FALSE;
 1902              		.loc 1 37 0
 1903 016c 0030A0E3 		mov	r3, #0
 1904 0170 11304BE5 		strb	r3, [fp, #-17]
  38:../src/uart.c **** 	 int8 c;
  39:../src/uart.c **** 	 *p = '\0';
 1905              		.loc 1 39 0
 1906 0174 10301BE5 		ldr	r3, [fp, #-16]
 1907 0178 0020A0E3 		mov	r2, #0
 1908 017c 0020C3E5 		strb	r2, [r3, #0]
  40:../src/uart.c **** 
  41:../src/uart.c **** 	 if (i<0){
 1909              		.loc 1 41 0
 1910 0180 28301BE5 		ldr	r3, [fp, #-40]
 1911 0184 000053E3 		cmp	r3, #0
 1912 0188 040000AA 		bge	.L16
  42:../src/uart.c **** 
  43:../src/uart.c **** 		 i*= -1;
 1913              		.loc 1 43 0
 1914 018c 28301BE5 		ldr	r3, [fp, #-40]
 1915 0190 003063E2 		rsb	r3, r3, #0
 1916 0194 28300BE5 		str	r3, [fp, #-40]
  44:../src/uart.c **** 		 negativo= TRUE;
 1917              		.loc 1 44 0
 1918 0198 0130A0E3 		mov	r3, #1
 1919 019c 11304BE5 		strb	r3, [fp, #-17]
 1920              	.L16:
  45:../src/uart.c **** 	 }
  46:../src/uart.c **** 
  47:../src/uart.c **** 	 do {
  48:../src/uart.c **** 
  49:../src/uart.c **** 		 c=i%10;
 1921              		.loc 1 49 0 discriminator 1
 1922 01a0 28101BE5 		ldr	r1, [fp, #-40]
 1923 01a4 A8309FE5 		ldr	r3, .L18
 1924 01a8 9123C3E0 		smull	r2, r3, r1, r3
 1925 01ac 4321A0E1 		mov	r2, r3, asr #2
 1926 01b0 C13FA0E1 		mov	r3, r1, asr #31
 1927 01b4 022063E0 		rsb	r2, r3, r2
 1928 01b8 0230A0E1 		mov	r3, r2
 1929 01bc 0331A0E1 		mov	r3, r3, asl #2
 1930 01c0 023083E0 		add	r3, r3, r2
 1931 01c4 8330A0E1 		mov	r3, r3, asl #1
 1932 01c8 012063E0 		rsb	r2, r3, r1
 1933 01cc 0230A0E1 		mov	r3, r2
 1934 01d0 12304BE5 		strb	r3, [fp, #-18]
  50:../src/uart.c **** 		 *--p = '0'+ c;
 1935              		.loc 1 50 0 discriminator 1
 1936 01d4 10301BE5 		ldr	r3, [fp, #-16]
 1937 01d8 013043E2 		sub	r3, r3, #1
 1938 01dc 10300BE5 		str	r3, [fp, #-16]
 1939 01e0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 1940 01e4 303083E2 		add	r3, r3, #48
 1941 01e8 FF2003E2 		and	r2, r3, #255
 1942 01ec 10301BE5 		ldr	r3, [fp, #-16]
 1943 01f0 0020C3E5 		strb	r2, [r3, #0]
  51:../src/uart.c **** 		 i/=10;
 1944              		.loc 1 51 0 discriminator 1
 1945 01f4 28301BE5 		ldr	r3, [fp, #-40]
 1946 01f8 54209FE5 		ldr	r2, .L18
 1947 01fc 9312C2E0 		smull	r1, r2, r3, r2
 1948 0200 4221A0E1 		mov	r2, r2, asr #2
 1949 0204 C33FA0E1 		mov	r3, r3, asr #31
 1950 0208 023063E0 		rsb	r3, r3, r2
 1951 020c 28300BE5 		str	r3, [fp, #-40]
  52:../src/uart.c **** 	 } while(i);
 1952              		.loc 1 52 0 discriminator 1
 1953 0210 28301BE5 		ldr	r3, [fp, #-40]
 1954 0214 000053E3 		cmp	r3, #0
 1955 0218 E0FFFF1A 		bne	.L16
  53:../src/uart.c **** 
  54:../src/uart.c **** 	 if (negativo)
 1956              		.loc 1 54 0
 1957 021c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1958 0220 000053E3 		cmp	r3, #0
 1959 0224 0500000A 		beq	.L17
  55:../src/uart.c **** 	 {
  56:../src/uart.c **** 		*--p= '-';
 1960              		.loc 1 56 0
 1961 0228 10301BE5 		ldr	r3, [fp, #-16]
 1962 022c 013043E2 		sub	r3, r3, #1
 1963 0230 10300BE5 		str	r3, [fp, #-16]
 1964 0234 10301BE5 		ldr	r3, [fp, #-16]
 1965 0238 2D20A0E3 		mov	r2, #45
 1966 023c 0020C3E5 		strb	r2, [r3, #0]
 1967              	.L17:
  57:../src/uart.c **** 	 }
  58:../src/uart.c **** 	 uart0_puts (p);
 1968              		.loc 1 58 0
 1969 0240 10001BE5 		ldr	r0, [fp, #-16]
 1970 0244 FEFFFFEB 		bl	uart0_puts
  59:../src/uart.c **** 
  60:../src/uart.c **** 
  61:../src/uart.c **** }
 1971              		.loc 1 61 0
 1972 0248 0CD04BE2 		sub	sp, fp, #12
 1973 024c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1974 0250 1EFF2FE1 		bx	lr
 1975              	.L19:
 1976              		.align	2
 1977              	.L18:
 1978 0254 67666666 		.word	1717986919
 1979              		.cfi_endproc
 1980              	.LFE4:
 1982              		.align	2
 1983              		.global	uart0_puthex
 1985              	uart0_puthex:
 1986              	.LFB5:
  62:../src/uart.c **** 
  63:../src/uart.c **** void uart0_puthex( uint32 i )
  64:../src/uart.c **** {
 1987              		.loc 1 64 0
 1988              		.cfi_startproc
 1989              		@ Function supports interworking.
 1990              		@ args = 0, pretend = 0, frame = 24
 1991              		@ frame_needed = 1, uses_anonymous_args = 0
 1992 0258 0DC0A0E1 		mov	ip, sp
 1993              	.LCFI10:
 1994              		.cfi_def_cfa_register 12
 1995 025c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1996 0260 04B04CE2 		sub	fp, ip, #4
 1997              		.cfi_offset 14, -8
 1998              		.cfi_offset 13, -12
 1999              		.cfi_offset 11, -16
 2000              	.LCFI11:
 2001              		.cfi_def_cfa 11, 4
 2002 0264 18D04DE2 		sub	sp, sp, #24
 2003 0268 20000BE5 		str	r0, [fp, #-32]
  65:../src/uart.c ****     char buf[8 + 1];
  66:../src/uart.c ****     char *p = buf + 8;
 2004              		.loc 1 66 0
 2005 026c 1C304BE2 		sub	r3, fp, #28
 2006 0270 083083E2 		add	r3, r3, #8
 2007 0274 10300BE5 		str	r3, [fp, #-16]
  67:../src/uart.c ****     uint8 c;
  68:../src/uart.c **** 
  69:../src/uart.c ****     *p = '\0';
 2008              		.loc 1 69 0
 2009 0278 10301BE5 		ldr	r3, [fp, #-16]
 2010 027c 0020A0E3 		mov	r2, #0
 2011 0280 0020C3E5 		strb	r2, [r3, #0]
 2012              	.L23:
  70:../src/uart.c **** 
  71:../src/uart.c ****     do {
  72:../src/uart.c ****         c = i & 0xf;
 2013              		.loc 1 72 0
 2014 0284 20301BE5 		ldr	r3, [fp, #-32]
 2015 0288 FF3003E2 		and	r3, r3, #255
 2016 028c 0F3003E2 		and	r3, r3, #15
 2017 0290 11304BE5 		strb	r3, [fp, #-17]
  73:../src/uart.c ****         if( c < 10 )
 2018              		.loc 1 73 0
 2019 0294 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2020 0298 090053E3 		cmp	r3, #9
 2021 029c 0800008A 		bhi	.L21
  74:../src/uart.c ****             *--p = '0' + c;
 2022              		.loc 1 74 0
 2023 02a0 10301BE5 		ldr	r3, [fp, #-16]
 2024 02a4 013043E2 		sub	r3, r3, #1
 2025 02a8 10300BE5 		str	r3, [fp, #-16]
 2026 02ac 11305BE5 		ldrb	r3, [fp, #-17]
 2027 02b0 303083E2 		add	r3, r3, #48
 2028 02b4 FF2003E2 		and	r2, r3, #255
 2029 02b8 10301BE5 		ldr	r3, [fp, #-16]
 2030 02bc 0020C3E5 		strb	r2, [r3, #0]
 2031 02c0 070000EA 		b	.L22
 2032              	.L21:
  75:../src/uart.c ****         else
  76:../src/uart.c ****             *--p = 'a' + c - 10;
 2033              		.loc 1 76 0
 2034 02c4 10301BE5 		ldr	r3, [fp, #-16]
 2035 02c8 013043E2 		sub	r3, r3, #1
 2036 02cc 10300BE5 		str	r3, [fp, #-16]
 2037 02d0 11305BE5 		ldrb	r3, [fp, #-17]
 2038 02d4 573083E2 		add	r3, r3, #87
 2039 02d8 FF2003E2 		and	r2, r3, #255
 2040 02dc 10301BE5 		ldr	r3, [fp, #-16]
 2041 02e0 0020C3E5 		strb	r2, [r3, #0]
 2042              	.L22:
  77:../src/uart.c ****         i = i >> 4;
 2043              		.loc 1 77 0
 2044 02e4 20301BE5 		ldr	r3, [fp, #-32]
 2045 02e8 2332A0E1 		mov	r3, r3, lsr #4
 2046 02ec 20300BE5 		str	r3, [fp, #-32]
  78:../src/uart.c ****     } while( i );
 2047              		.loc 1 78 0
 2048 02f0 20301BE5 		ldr	r3, [fp, #-32]
 2049 02f4 000053E3 		cmp	r3, #0
 2050 02f8 E1FFFF1A 		bne	.L23
  79:../src/uart.c **** 
  80:../src/uart.c ****     uart0_puts( p );
 2051              		.loc 1 80 0
 2052 02fc 10001BE5 		ldr	r0, [fp, #-16]
 2053 0300 FEFFFFEB 		bl	uart0_puts
  81:../src/uart.c **** }
 2054              		.loc 1 81 0
 2055 0304 0CD04BE2 		sub	sp, fp, #12
 2056 0308 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2057 030c 1EFF2FE1 		bx	lr
 2058              		.cfi_endproc
 2059              	.LFE5:
 2061              		.align	2
 2062              		.global	uart0_gets
 2064              	uart0_gets:
 2065              	.LFB6:
  82:../src/uart.c **** 
  83:../src/uart.c **** void uart0_gets( char *s )
  84:../src/uart.c **** {
 2066              		.loc 1 84 0
 2067              		.cfi_startproc
 2068              		@ Function supports interworking.
 2069              		@ args = 0, pretend = 0, frame = 16
 2070              		@ frame_needed = 1, uses_anonymous_args = 0
 2071 0310 0DC0A0E1 		mov	ip, sp
 2072              	.LCFI12:
 2073              		.cfi_def_cfa_register 12
 2074 0314 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2075 0318 04B04CE2 		sub	fp, ip, #4
 2076              		.cfi_offset 14, -8
 2077              		.cfi_offset 13, -12
 2078              		.cfi_offset 11, -16
 2079              	.LCFI13:
 2080              		.cfi_def_cfa 11, 4
 2081 031c 10D04DE2 		sub	sp, sp, #16
 2082 0320 18000BE5 		str	r0, [fp, #-24]
  85:../src/uart.c ****     char cadena=uart0_getchar();
 2083              		.loc 1 85 0
 2084 0324 FEFFFFEB 		bl	uart0_getchar
 2085 0328 0030A0E1 		mov	r3, r0
 2086 032c 0D304BE5 		strb	r3, [fp, #-13]
  86:../src/uart.c ****     while (cadena != '\n')
 2087              		.loc 1 86 0
 2088 0330 080000EA 		b	.L25
 2089              	.L26:
  87:../src/uart.c ****     {
  88:../src/uart.c ****     	*s++ = cadena;
 2090              		.loc 1 88 0
 2091 0334 18301BE5 		ldr	r3, [fp, #-24]
 2092 0338 0D205BE5 		ldrb	r2, [fp, #-13]
 2093 033c 0020C3E5 		strb	r2, [r3, #0]
 2094 0340 18301BE5 		ldr	r3, [fp, #-24]
 2095 0344 013083E2 		add	r3, r3, #1
 2096 0348 18300BE5 		str	r3, [fp, #-24]
  89:../src/uart.c ****     	cadena = uart0_getchar();
 2097              		.loc 1 89 0
 2098 034c FEFFFFEB 		bl	uart0_getchar
 2099 0350 0030A0E1 		mov	r3, r0
 2100 0354 0D304BE5 		strb	r3, [fp, #-13]
 2101              	.L25:
  86:../src/uart.c ****     while (cadena != '\n')
 2102              		.loc 1 86 0 discriminator 1
 2103 0358 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2104 035c 0A0053E3 		cmp	r3, #10
 2105 0360 F3FFFF1A 		bne	.L26
  90:../src/uart.c **** 
  91:../src/uart.c ****     }
  92:../src/uart.c **** 
  93:../src/uart.c ****     *s= '\0';
 2106              		.loc 1 93 0
 2107 0364 18301BE5 		ldr	r3, [fp, #-24]
 2108 0368 0020A0E3 		mov	r2, #0
 2109 036c 0020C3E5 		strb	r2, [r3, #0]
  94:../src/uart.c **** }
 2110              		.loc 1 94 0
 2111 0370 0CD04BE2 		sub	sp, fp, #12
 2112 0374 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2113 0378 1EFF2FE1 		bx	lr
 2114              		.cfi_endproc
 2115              	.LFE6:
 2117              		.align	2
 2118              		.global	uart0_getint
 2120              	uart0_getint:
 2121              	.LFB7:
  95:../src/uart.c **** 
  96:../src/uart.c **** int32 uart0_getint( void )
  97:../src/uart.c **** {
 2122              		.loc 1 97 0
 2123              		.cfi_startproc
 2124              		@ Function supports interworking.
 2125              		@ args = 0, pretend = 0, frame = 272
 2126              		@ frame_needed = 1, uses_anonymous_args = 0
 2127 037c 0DC0A0E1 		mov	ip, sp
 2128              	.LCFI14:
 2129              		.cfi_def_cfa_register 12
 2130 0380 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2131 0384 04B04CE2 		sub	fp, ip, #4
 2132              		.cfi_offset 14, -8
 2133              		.cfi_offset 13, -12
 2134              		.cfi_offset 11, -16
 2135              	.LCFI15:
 2136              		.cfi_def_cfa 11, 4
 2137 0388 11DE4DE2 		sub	sp, sp, #272
  98:../src/uart.c ****    int32 resultado=0;
 2138              		.loc 1 98 0
 2139 038c 0030A0E3 		mov	r3, #0
 2140 0390 10300BE5 		str	r3, [fp, #-16]
  99:../src/uart.c ****    char cadena [256], *p;
 100:../src/uart.c ****    uart0_gets(cadena);
 2141              		.loc 1 100 0
 2142 0394 463F4BE2 		sub	r3, fp, #280
 2143 0398 0300A0E1 		mov	r0, r3
 2144 039c FEFFFFEB 		bl	uart0_gets
 101:../src/uart.c ****    boolean negativo=FALSE;
 2145              		.loc 1 101 0
 2146 03a0 0030A0E3 		mov	r3, #0
 2147 03a4 15304BE5 		strb	r3, [fp, #-21]
 102:../src/uart.c ****    p= cadena;
 2148              		.loc 1 102 0
 2149 03a8 463F4BE2 		sub	r3, fp, #280
 2150 03ac 14300BE5 		str	r3, [fp, #-20]
 103:../src/uart.c **** 
 104:../src/uart.c **** 
 105:../src/uart.c **** 	   if(*p =='-'){
 2151              		.loc 1 105 0
 2152 03b0 14301BE5 		ldr	r3, [fp, #-20]
 2153 03b4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2154 03b8 2D0053E3 		cmp	r3, #45
 2155 03bc 1300001A 		bne	.L32
 106:../src/uart.c **** 		negativo = TRUE;
 2156              		.loc 1 106 0
 2157 03c0 0130A0E3 		mov	r3, #1
 2158 03c4 15304BE5 		strb	r3, [fp, #-21]
 107:../src/uart.c **** 		p++;
 2159              		.loc 1 107 0
 2160 03c8 14301BE5 		ldr	r3, [fp, #-20]
 2161 03cc 013083E2 		add	r3, r3, #1
 2162 03d0 14300BE5 		str	r3, [fp, #-20]
 108:../src/uart.c **** 	   }
 109:../src/uart.c **** 	   while (*p != '\0'){
 2163              		.loc 1 109 0
 2164 03d4 0E0000EA 		b	.L29
 2165              	.L30:
 110:../src/uart.c **** 		   resultado = (*(p++)-'0')+ resultado*10;
 2166              		.loc 1 110 0
 2167 03d8 14301BE5 		ldr	r3, [fp, #-20]
 2168 03dc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2169 03e0 301043E2 		sub	r1, r3, #48
 2170 03e4 10201BE5 		ldr	r2, [fp, #-16]
 2171 03e8 0230A0E1 		mov	r3, r2
 2172 03ec 0331A0E1 		mov	r3, r3, asl #2
 2173 03f0 023083E0 		add	r3, r3, r2
 2174 03f4 8330A0E1 		mov	r3, r3, asl #1
 2175 03f8 033081E0 		add	r3, r1, r3
 2176 03fc 10300BE5 		str	r3, [fp, #-16]
 2177 0400 14301BE5 		ldr	r3, [fp, #-20]
 2178 0404 013083E2 		add	r3, r3, #1
 2179 0408 14300BE5 		str	r3, [fp, #-20]
 2180 040c 000000EA 		b	.L29
 2181              	.L32:
 109:../src/uart.c **** 	   while (*p != '\0'){
 2182              		.loc 1 109 0
 2183 0410 0000A0E1 		mov	r0, r0	@ nop
 2184              	.L29:
 109:../src/uart.c **** 	   while (*p != '\0'){
 2185              		.loc 1 109 0 is_stmt 0 discriminator 1
 2186 0414 14301BE5 		ldr	r3, [fp, #-20]
 2187 0418 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2188 041c 000053E3 		cmp	r3, #0
 2189 0420 ECFFFF1A 		bne	.L30
 111:../src/uart.c **** 
 112:../src/uart.c **** 
 113:../src/uart.c ****    }
 114:../src/uart.c ****    if(negativo)
 2190              		.loc 1 114 0 is_stmt 1
 2191 0424 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2192 0428 000053E3 		cmp	r3, #0
 2193 042c 0200000A 		beq	.L31
 115:../src/uart.c **** 	 resultado *= -1;
 2194              		.loc 1 115 0
 2195 0430 10301BE5 		ldr	r3, [fp, #-16]
 2196 0434 003063E2 		rsb	r3, r3, #0
 2197 0438 10300BE5 		str	r3, [fp, #-16]
 2198              	.L31:
 116:../src/uart.c ****    return resultado;
 2199              		.loc 1 116 0
 2200 043c 10301BE5 		ldr	r3, [fp, #-16]
 117:../src/uart.c **** }
 2201              		.loc 1 117 0
 2202 0440 0300A0E1 		mov	r0, r3
 2203 0444 0CD04BE2 		sub	sp, fp, #12
 2204 0448 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2205 044c 1EFF2FE1 		bx	lr
 2206              		.cfi_endproc
 2207              	.LFE7:
 2209              		.align	2
 2210              		.global	uart0_gethex
 2212              	uart0_gethex:
 2213              	.LFB8:
 118:../src/uart.c **** 
 119:../src/uart.c **** uint32 uart0_gethex( void )
 120:../src/uart.c **** {
 2214              		.loc 1 120 0
 2215              		.cfi_startproc
 2216              		@ Function supports interworking.
 2217              		@ args = 0, pretend = 0, frame = 264
 2218              		@ frame_needed = 1, uses_anonymous_args = 0
 2219 0450 0DC0A0E1 		mov	ip, sp
 2220              	.LCFI16:
 2221              		.cfi_def_cfa_register 12
 2222 0454 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2223 0458 04B04CE2 		sub	fp, ip, #4
 2224              		.cfi_offset 14, -8
 2225              		.cfi_offset 13, -12
 2226              		.cfi_offset 11, -16
 2227              	.LCFI17:
 2228              		.cfi_def_cfa 11, 4
 2229 045c 42DF4DE2 		sub	sp, sp, #264
 121:../src/uart.c **** 	uint32 resultadohex=0;
 2230              		.loc 1 121 0
 2231 0460 0030A0E3 		mov	r3, #0
 2232 0464 10300BE5 		str	r3, [fp, #-16]
 122:../src/uart.c **** 	char cadena [256], *p;
 123:../src/uart.c **** 	uart0_gets(cadena);
 2233              		.loc 1 123 0
 2234 0468 453F4BE2 		sub	r3, fp, #276
 2235 046c 0300A0E1 		mov	r0, r3
 2236 0470 FEFFFFEB 		bl	uart0_gets
 124:../src/uart.c **** 	p=cadena;
 2237              		.loc 1 124 0
 2238 0474 453F4BE2 		sub	r3, fp, #276
 2239 0478 14300BE5 		str	r3, [fp, #-20]
 125:../src/uart.c **** 	while(*p!= '\0'){
 2240              		.loc 1 125 0
 2241 047c 3A0000EA 		b	.L34
 2242              	.L37:
 126:../src/uart.c **** 		if (*p >= '0' && *p <= '9')
 2243              		.loc 1 126 0
 2244 0480 14301BE5 		ldr	r3, [fp, #-20]
 2245 0484 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2246 0488 2F0053E3 		cmp	r3, #47
 2247 048c 0F00009A 		bls	.L35
 2248              		.loc 1 126 0 is_stmt 0 discriminator 1
 2249 0490 14301BE5 		ldr	r3, [fp, #-20]
 2250 0494 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2251 0498 390053E3 		cmp	r3, #57
 2252 049c 0B00008A 		bhi	.L35
 127:../src/uart.c **** 			resultadohex = (*(p++)-'0')+ resultadohex*16;
 2253              		.loc 1 127 0 is_stmt 1
 2254 04a0 14301BE5 		ldr	r3, [fp, #-20]
 2255 04a4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2256 04a8 0320A0E1 		mov	r2, r3
 2257 04ac 10301BE5 		ldr	r3, [fp, #-16]
 2258 04b0 0332A0E1 		mov	r3, r3, asl #4
 2259 04b4 033082E0 		add	r3, r2, r3
 2260 04b8 303043E2 		sub	r3, r3, #48
 2261 04bc 10300BE5 		str	r3, [fp, #-16]
 2262 04c0 14301BE5 		ldr	r3, [fp, #-20]
 2263 04c4 013083E2 		add	r3, r3, #1
 2264 04c8 14300BE5 		str	r3, [fp, #-20]
 2265 04cc 260000EA 		b	.L34
 2266              	.L35:
 128:../src/uart.c **** 		else if(*p >= 'A' && *p <= 'F')
 2267              		.loc 1 128 0
 2268 04d0 14301BE5 		ldr	r3, [fp, #-20]
 2269 04d4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2270 04d8 400053E3 		cmp	r3, #64
 2271 04dc 0F00009A 		bls	.L36
 2272              		.loc 1 128 0 is_stmt 0 discriminator 1
 2273 04e0 14301BE5 		ldr	r3, [fp, #-20]
 2274 04e4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2275 04e8 460053E3 		cmp	r3, #70
 2276 04ec 0B00008A 		bhi	.L36
 129:../src/uart.c **** 			resultadohex = ((*(p++)-'A')+ 10)+ resultadohex*16;
 2277              		.loc 1 129 0 is_stmt 1
 2278 04f0 14301BE5 		ldr	r3, [fp, #-20]
 2279 04f4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2280 04f8 0320A0E1 		mov	r2, r3
 2281 04fc 10301BE5 		ldr	r3, [fp, #-16]
 2282 0500 0332A0E1 		mov	r3, r3, asl #4
 2283 0504 033082E0 		add	r3, r2, r3
 2284 0508 373043E2 		sub	r3, r3, #55
 2285 050c 10300BE5 		str	r3, [fp, #-16]
 2286 0510 14301BE5 		ldr	r3, [fp, #-20]
 2287 0514 013083E2 		add	r3, r3, #1
 2288 0518 14300BE5 		str	r3, [fp, #-20]
 2289 051c 120000EA 		b	.L34
 2290              	.L36:
 130:../src/uart.c **** 		else if (*p >= 'a' && *p <= 'f')
 2291              		.loc 1 130 0
 2292 0520 14301BE5 		ldr	r3, [fp, #-20]
 2293 0524 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2294 0528 600053E3 		cmp	r3, #96
 2295 052c 0E00009A 		bls	.L34
 2296              		.loc 1 130 0 is_stmt 0 discriminator 1
 2297 0530 14301BE5 		ldr	r3, [fp, #-20]
 2298 0534 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2299 0538 660053E3 		cmp	r3, #102
 2300 053c 0A00008A 		bhi	.L34
 131:../src/uart.c **** 			resultadohex = ((*(p++)-'a')+ 10)+ resultadohex*16;
 2301              		.loc 1 131 0 is_stmt 1
 2302 0540 14301BE5 		ldr	r3, [fp, #-20]
 2303 0544 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2304 0548 0320A0E1 		mov	r2, r3
 2305 054c 10301BE5 		ldr	r3, [fp, #-16]
 2306 0550 0332A0E1 		mov	r3, r3, asl #4
 2307 0554 033082E0 		add	r3, r2, r3
 2308 0558 573043E2 		sub	r3, r3, #87
 2309 055c 10300BE5 		str	r3, [fp, #-16]
 2310 0560 14301BE5 		ldr	r3, [fp, #-20]
 2311 0564 013083E2 		add	r3, r3, #1
 2312 0568 14300BE5 		str	r3, [fp, #-20]
 2313              	.L34:
 125:../src/uart.c **** 	while(*p!= '\0'){
 2314              		.loc 1 125 0 discriminator 1
 2315 056c 14301BE5 		ldr	r3, [fp, #-20]
 2316 0570 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2317 0574 000053E3 		cmp	r3, #0
 2318 0578 C0FFFF1A 		bne	.L37
 132:../src/uart.c **** 
 133:../src/uart.c **** 
 134:../src/uart.c **** 		}
 135:../src/uart.c **** 	return resultadohex;
 2319              		.loc 1 135 0
 2320 057c 10301BE5 		ldr	r3, [fp, #-16]
 136:../src/uart.c **** }
 2321              		.loc 1 136 0
 2322 0580 0300A0E1 		mov	r0, r3
 2323 0584 0CD04BE2 		sub	sp, fp, #12
 2324 0588 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2325 058c 1EFF2FE1 		bx	lr
 2326              		.cfi_endproc
 2327              	.LFE8:
 2329              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:1682   .text:00000000 $a
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:1685   .text:00000000 uart0_init
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:1729   .text:00000054 $d
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:1736   .text:00000064 $a
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:1739   .text:00000064 uart0_putchar
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:1779   .text:000000ac $d
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:1784   .text:000000b4 $a
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:1787   .text:000000b4 uart0_getchar
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:1825   .text:000000f4 $d
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:1830   .text:000000fc $a
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:1833   .text:000000fc uart0_puts
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:1879   .text:0000014c uart0_putint
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:1978   .text:00000254 $d
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:1982   .text:00000258 $a
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:1985   .text:00000258 uart0_puthex
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:2064   .text:00000310 uart0_gets
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:2120   .text:0000037c uart0_getint
C:\Users\VUser\AppData\Local\Temp\ccs9KibW.s:2212   .text:00000450 uart0_gethex
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
